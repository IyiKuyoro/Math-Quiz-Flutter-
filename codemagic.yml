# Automatically generated on 2021-02-14 UTC from https://codemagic.io/app/6028a8397236299eff2af309/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  default-workflow:
    name: Default Workflow
    instance_type: mac_mini
    max_build_duration: 60
    environment:
      vars:
        GCLOUD_KEY_FILE: Encrypted(Z0FBQUFBQmdLWjNnTmxYdEhYSEVLX1I3dWNPOGFuc0RSRFRTdVp0MzBsYUdBNG9VSFZ1eWtNSXJrYXFoQW0zcThFWnZQc0dEQ0haY2ZPLUhaSkpON0k3TTBvTWRrakh0R3pBZVFsSWlFSV91dkJSMm44ZzN3YXR4M1ZoV2tOYmlzejN4aVBBWXU4SWJub3kydy1Jb1E3c0dNbGRDeWdGYjRNNFJCaGx3MTBHVmZGQlkxd0pZT3R0d21QeGNfeWhYaXA2S0R4V0d5QVVPczl0QWJwZGZKdUJUWTljTGhDVHhmdnE0dDQwMHlyZUJ5U19YREM2UmN6U2VkYTVBQ1M0Y3V3azFfcXV3WGhyQWN5VFpfMWdhRGQ1QlFBNkVnSEQtc0ZQdjNHWmdsWVpPRGpSbHZzUVJ5a19hVHIxOW16TDQ1anU1dHlSa29VZmF5cHJQLV9CYUQxWXZyZHlwV1hVUmJ4UUhpQVU4NEFhckc3c0J0VWhzVFlKTHppUVI2S1FHUmJSMkFCX1RENmJXNVdlMGNyVmVtdjZOUk5EbXFOelpJY0RSdDFQYWRaNXRiZzhHcTlBemprcC1UWDBqbjlpWFRrN2x6Tm1JMVQ0VkpsdnNNenF0NmY2SnR3TGgxRncyYnBBTEhyeUw0YjJlRUN4MDVJMHVMRUowcURFVExkNlpLX2ZGMDJkSGV3R1JPbnllbmVVZ1JnUmhmQ2p3UEZxLTBQeDRyRGZUSk82OFhielVXMVRDZW41UXNIUllNMjJ3bTUwdVVUdWs0a1Bod0dfUUpHLVJtTkpXMW9tQmVQVmNvVFQzV2k1MjB4T0JaQm5FNWd2Y3ctYTVLM3JvcE5MeXVhNjFMc3ljYmhBZk92MHh4QlRqWk00VlB3VjlxTHhVZGMtT0psNzlZUFBpa1VzeUtiQmVnNHFjb0JqT1B3RW00MFk4SWJjNzF4QjZ3ZUdvR3EtTUplV1NpMlNuc3M2V3B4NzNQVnhPVXZBaWItZ1V3bEp6YnFQWkZVZm9LSjhUVkJybVhWOFpDQTNHSHYtNGJlMl9LeVVOS25XbFdlNUNXWkRjbkxmSjNuNVBXb2JPRGVwNDJiaXJMNVkyMmk3QmxLMk5ZUjktcDE0anRYZi1jVzBNMFpaZGFRYUUxZWp6UUNFalFhd19Jal80Xzhhb1cxQk1iQk5zX3lkT05UZ1JJdll5d21nZmxiWmZpLVpsR0E1cnJERnRCek0yNU5FdjgwNWU2MWx5dk10TGNURzc3U1o5cGJxMUJKV05SdVp5Qy1tS0FMM01YRGtONXNJZGptaGRjMWc3cDduMlNsd0ViVDhNVi1kbGNJcU53c0R1YUtZdDAxWVFtTFZLR2FOUlBUaDRsSUh4Mk82S3NYSWlHRkdLZjBDUjF1N3lwQXJwdzZPRzBjR1d5ODZDWnZQOFJqU2xnemdnYUZVZjdITFpmQ1B1dll5V19reWNVRFhSVkxHWE15cHZZRk5DNkRuQjU5UV9MaXc4dzkzdlZNbjRuZVlxV2pvcGtzSlhnYVVxemVDZ0FXWTljZWRRZ2R5dTBrN1BIYUR5blBnRkxJTTRHSjlvVHN1aTgzWHo4N3VFNWNCY1F6aTZzSDhCRmRPcU83QVBFYmtneUV6YWM5T0JGR0N2aGhQVlhDQ190UzdBZUdYRHVvTFRXNzliQXZIVFE1eGZLWUxwU21GLURKSENvak4wakJXdk9SWTVnZ24zbm1BMjRDVC1LejNwcWNCRnhsbGVfQl9CN1hvclZoWUFxLTNfRWpJbl9Hbi1yaTRLZ0RIUmVXSFRrUVJSQmZwVTgxQjN4dnJYZ3cwVVIwckRVOHRuT0FweWhLeEhrblNIQVo3X2tlVTRMQkZ5dTRpdV94Zk1fTk1jakNlY1gxaVJEMFdmRmRyQ2tMRnE4ak1MOVJUUGN0SHRaNGJUWUo2Y0owUjh2d3d6V1piWS1IMXd2ckFfWlNEdXB3WEIwSUFpUnpELVpnUzhwYUFCZHpRSjBZV0g1a2VnVDA1X3lkSGhtWHAxQndrMEp1R3FRdjNybVg5UGtHeXhLR0gxdFYxVGsyOWkxaC1VbVVNU0xjYVpIdUg4ZUVlcHJtZElOSUxIZDVIYWVuak5SS1BQMElHa2otZ2lERUVDU0hCNy1lbnpSeFVNc0NGMXFrUkZoUDVrYkJPN21kV0pTaGRGS2xxcC1nX1dnSUR1Q1liZ0tNSnk3cnhRUEpFVHdEOUJEQmVwQWxtaERmVm1nc0llV3o3aWZYenRGNHpMYlVpNWhITU05a0Y3bGM5VnBlQTZoNDhzaFJaVzM5cll1RXRaUU1jdXZZVkhmNFZwS0d5cWxEWkFmVjhta3pKWXVEZ3dfcHk5bWRpS1IzeGVXODU4R0Jsb296alhMUTBVNGp0c1FfRHVKcUV0cEVjQzhBWHR4a3JpTDNTcGtINTItVzFlYlVQRTVhT2tDcVFvejdLdVRlN3RPdkkwVE96SVhoemx3QXBwcUFhSjBCQzk2MDItTjdmYUhrc1dadGdNNlJlLW0zcjhVeVZNbENXcXYzc0Z5M2YzUFp6U3VPa0J1NXFnVDgxa0pvcjl3ck5KMl85ZkNzSmtHYW1EMTBOODhUQldoQWJqbHBGRWowS2pobkdZTzR2Mmc5U2xaWHdHbWYyTHlMbDY2MU5zZVhuV29UcnZNNjR3S1JoTTBhZl9UUm9ET2ZmMlhVNWQ0ZEFtVmpZVWE4TUNfOU5pN3h5QUZFUmxoT2s2YzRIZTJnZmpTaDFhS0xra3d0dXlMdWJlU0lHWWcteVZwa3dnX3k4Qlh3U1RiWmtVdjNSV096RzdINHBpejJxTDVFT1FrRUt3VkxoMUdwdlkwek95bkxkcG9ldDBDMFpUVmFEUmY5V1ZyRDZUSkhsc2NVM0JBMWwzQmhvQXlTd3VpTmFlQmRDVUNHWUJ1TjZ6NW5xcU1aem10V2FrSFFqbmd3RHU5VnRrdHNReG9vbVpGQWxvVUdzd2ZhVl9qYzFkdS1EdmYtUWEzSkJtTXBEbkxjUU1tLUlCZjRUSzJ0MGttTy1ta1hNV3dyUGlXZnVCSnM0Vi1sVld6MDVacUNqTlMtLXBMOWVENmxNR2JYeEt2RVF6OTFSX1EyYzdXZ1Y0NEV2RXBXWS10UFZLR3djQ1lxVE1EWnR0VEtNYktrWURFRGtIQXhZUnFUdGgtRmJ4ZGVCNjBmLU8yT0d1YmJQOGh3NWFvTllhcDcyVTM2RUxfM2F3WXRITXRoQU96TDhRVndoZUFFWGtpc3U1aG9HMGVGOXBHbmVLY18za25lYzJacngxN3NyeGl3N0R5WmFiczhaeld1OGwtTm12cGMtRlNoVm5ycDlia0J3cHI1cVQ5TGgtZ1hfZFNHVHpVZVcyWEdTelA5REhickhlZXcyTUpJUzJkeTE0dnUzUGdnZ0g3NTR1NFBGN0FvdG5tQlF1OTR2UEpKRjMwLWpYWFh0MFJoSlowYy05ZXpsUGVrRE12WUo3RnpPTHVMaXBpaUV4YkZEU2o0LVBTU3FHWENrU1VsMlZiNVQ3WjhoYnhRVV9lWldZVU5POXhBWk9TLVN4TS1vVlhRMzJQUzJ5TlhPbU43Q0xDbG91VGdSRkFRN3FKRmlrUHV0azYzQW96dEtfQ09vU0ZxLVpGWmJESnMzTnFralBPZGdXTnV4NE5yalc2YzB2NXd3b2RLY3ktRzF1NTQyRVpOM1JVUEpzU2RQc0loT0JZaEUwMC1yQW40RFhSMWJtdGFLV09MZy1jeW5kZi1FUHN4eHdoUTBaQ0hDTndOV1lqM0V2dGVKUTlCRk5UNFA1TS1HVmNPMkMtbXl3RGxjX1labm9DZ3k2U1NLaWYtZ19fSHpnbDF4c0xTV1VGVXRMUWM5bGIzT0pxaTZNM2hPZXhpSWNlbnBWaDdCYk9CSzlXZHM0TDdPbHpBTkZWdmZkajFoWHBvcTl1WnM3SC04MXNmV0FtQXpyU1VUTmFKc292YVBKNXlyUGxLdHlGSUpaWDRudEI0dXppVEw3WEI2YVJNQnM0dXFsZ2QwaU9jUFNXNm9BdVplcGI2RHRGWXEwcmNETzMwWmhJZGdUaGRZNnJrUU1iMGl0eHJISTZ0aGtLelladjBPcnVBLTJfQnEtWF9SR2x4VGFvMldMWFFyY3lwMHVaMzhNaEdxZkJOTlRZNks4dVctQ2s4dWsyZngyNWpWUFhaUjRIN2U3OF9qQ0g3UEVtSDdGXy1YS2hZM3E2SXBSZzAyRUR3TGkyQnZTa21sVGlfQ1JCaU5NNE1kWElkSHpIc05tWTdETG82ajhyZkpaeHNxOFJLMjBtcTNMX3ktdExNY2pSQUJHMElfX3BYWnZEa0hCU1VlVkdkLXU2WTdpRGlVRDE3dC1MRS11Rm1RS2hJaEFHLWxKS2c4dzlSRHFuRGFRdmRkZzNJMFdhbGRTZElEbzFxVzBodTBVM1Z4cW52XzRNQjVrVmNmdGNId281dEdUaW1QT0swbkNjVFVYaXBDMHNkUGhISmtiUDlxYU5FMW9DUHpOWFA0c2JqQW5lY1lDU3lodzdJTUVEbGZwN2hkYnh5cWQ4ZWZjdU1mNDdXQlFjbWdHQ0tRSzZST08tQnRoVjdLVVU3ZUhnamFWLVhHSG1PTEVid0FhOU5ReEhLVldpWjJtWkhXUFFqMDlzVU1fU0trZk5jT0R1OVVaNGNTZXFrTlM0bjZfWDI5dUxYeHFCQUFpdDNCMkMtUVJnRHNRdDluNzV4dWY2SHBkdXRUbHVQb2g3UzZmaWpJRmhYSlIyaDVidE9JMjNZbzJ1NkRtdHpOZ1luZmlJUnVkSmxwTjNVSktMQ0NjWF80ZjdNWmJqbVpYaEp4RW1JVHdSZTV0Tkhfdmh4bUk0OEx2QWZLdE5mbEoxdnRUTmROQkRfcnFUM1V1RzIzM29FdVRVWTZPN2xyMHdrSHVQSWZ4Z24xZlpiMnhLaEEwMERETkpEdXdFWXdlS01IU1BGWFdkNmtiMmEzY2kzbGQ1bDNkc1ptUlgwTFNpX3JfZHVQa3FqaDdwM3VqQWlwMmhBYU1feE84azh5MXQ2QnIzQTNhWngwSUFjWlYtZkNPaHhXMmxoU0VBU09rZWhUa1d2cXd5ZEM2OU80QnFwenpvOUxlV0dnRHBPc1o3Ylc5V185WmlMZkVEMnhTSkVIRUF3TEhoVXhSaW9uUjh0RmxXMTR4bHNTa3kyRk5VV3dsYlpkTUJQOERVbDZpTXRYeWlpcy1sdkw0a3NlaWZ5MWFtay1OelIySFQ3RF9fblBsMm1QSHdScU5HM2R3NVV4ZXY3bHRTY2VvTnlGVmdqYkkxMWFQYUhHNlpsUDh3anhPbFFfZ040NVR1R1J1YXNFQ3ZPSnFLUEZTNnJKNWhjOURkbHpQTWVBUWtsbC1NY0oyeEdfNURCY2d4MHp1UFhfN2wtaHpCYUZELVo2ODlDNlY1aU9zWTVWSUM4WEVsN1pQb0NqQTZZQ0N4dUl6N0VyN2M3VHJuWDhSUnIzd2xXTXplYVJJWGZZanNTaVhUWUNkX3U2RlBzMGFVVWhSYlU2RkpqVDhUQlBudXRGcjhZTmRhTVNmLTd2TmNNSVY4QTg1Rzl5WW1JRXpZSS16VTI0X1FLQzlwcDM2d0g0djZ3amdSUkhWaUJfS1piRTY3TDYzT01kdFRqNWhMb3c1Z3I2YkhPRT0=)
      flutter: stable
      xcode: latest
      cocoapods: default
    cache:
      cache_paths: []
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
    scripts:
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - cd . && flutter packages pub get
      - cd . && flutter build apk --debug
      - find . -name "Podfile" -execdir pod install \;
      - cd . && flutter build ios --debug --no-codesign
      - |
        # FCI_BUILD_DIR is a predefined environment variable pointing to the root of the Flutter project
        cd $FCI_BUILD_DIR

        # Go to the android folder which contains the "gradlew" script used
        # for building Android apps from the terminal
        pushd android
        # Build an Android test APK (that's why we've created the MainActivityTest.java)
        ./gradlew app:assembleAndroidTest
        # Build a debug APK, passing in the integration test file
        ./gradlew app:assembleDebug -Ptarget="$FCI_BUILD_DIR/integration_test/app_test.dart"
        # Go back to the root of the project
        popd

        # Write the environment variable in base64 into a JSON file
        echo $GCLOUD_KEY_FILE | base64 --decode > ./gcloud_key_file.json

        # Using the gcloud CLI (preinstalled on Codemagic) authenticate using the service account key
        gcloud auth activate-service-account --key-file=gcloud_key_file.json

        # Select YOUR Firebase project through which want to run the tests
        gcloud --quiet config set project mathfast-12e5a

        # Run the Flutter integration tests as if they were regular Android instrumentation tests
        gcloud firebase test android run \
          --type instrumentation \
          --app build/app/outputs/apk/debug/app-debug.apk \
          --test build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
          --timeout 2m
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - opeoluwa.iyikuyoro@gmail.com
